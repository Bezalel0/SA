-- Max distance to consider enemies
local MAX_DISTANCE = 200

-- Toggle to enable or disable the functionality
getgenv().toggled = true

-- Function to find the nearest enemy
local function findNearestEnemy()
    local nearestDistance, nearestEnemy = MAX_DISTANCE, nil
    local localPlayer = game:GetService("Players").LocalPlayer

    for _, player in pairs(game:GetService("Players"):GetPlayers()) do
        if player.Team ~= localPlayer.Team and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance < nearestDistance then
                nearestDistance, nearestEnemy = distance, player
            end
        end
    end
    return nearestEnemy
end

if getgenv().toggled then
    local function customRaycast(startPos, direction, ignoreList)
        local nearestEnemy = findNearestEnemy()

        -- If an enemy is found and it's within the raycast range
        if nearestEnemy then
            local targetPosition = nearestEnemy.Character.HumanoidRootPart.Position
            local rayDirection = (targetPosition - startPos).Unit * direction.Magnitude

            return workspace:Raycast(startPos, rayDirection, {ignoreList, nearestEnemy.Character})
        else
            return workspace:Raycast(startPos, direction, ignoreList)
        end
    end

    -- Hook into the existing raycasting function, if possible
    -- Assuming you have a function or method to hook into
    -- For example, if the game uses `BulletEmitter` or `Taser`, you might modify their raycasting functions

else
    -- Restore original functionality if toggled off
end
