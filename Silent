-- Configuration
local MAX_DISTANCE = 200
local AIM_SMOOTHNESS = 0.1 -- Lower values for smoother, more gradual aiming
local AIM_FOV = 50 -- Field of view within which the aim lock works
local AIM_DELAY = 0.1 -- Delay to make the adjustments less obvious

-- Function to find the nearest enemy
local function findNearestEnemy()
    local nearestDistance = MAX_DISTANCE
    local nearestEnemy = nil
    local localPlayer = game:GetService("Players").LocalPlayer
    local character = localPlayer.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return nil end

    for _, player in pairs(game:GetService("Players"):GetPlayers()) do
        if player.Team ~= localPlayer.Team and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (player.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
            if distance < nearestDistance then
                nearestDistance = distance
                nearestEnemy = player
            end
        end
    end
    return nearestEnemy
end

-- Function to smoothly adjust the aim
local function smoothAim(targetPosition)
    local localPlayer = game:GetService("Players").LocalPlayer
    local character = localPlayer.Character
    local hrp = character and character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local currentPosition = hrp.Position
    local direction = (targetPosition - currentPosition).Unit
    local newCFrame = CFrame.lookAt(currentPosition, targetPosition)

    -- Smoothly transition to the target CFrame
    hrp.CFrame = hrp.CFrame:Lerp(newCFrame, AIM_SMOOTHNESS)
end

-- Main loop
while true do
    wait(AIM_DELAY) -- Adjust the loop interval to control the adjustment speed

    local nearestEnemy = findNearestEnemy()

    if nearestEnemy then
        local enemyPosition = nearestEnemy.Character.HumanoidRootPart.Position
        local playerPosition = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position

        -- Check if the enemy is within the FOV
        if (enemyPosition - playerPosition).Magnitude <= AIM_FOV then
            smoothAim(enemyPosition)
        end
    end
end
